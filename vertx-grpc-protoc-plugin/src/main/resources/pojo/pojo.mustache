{{#packageName}}
package {{packageName}};
{{/packageName}}

import com.google.protobuf.*;
import lombok.Data;
import lombok.experimental.Accessors;

@Data
@Accessors(chain = true)
public class {{className}} {
{{#fields}}
    private {{javaType}} {{name}};
{{/fields}}

    static public {{protoFullName}} toProto({{className}} pojo) {
        {{protoFullName}}.Builder builder = {{protoFullName}}.newBuilder();
{{#fields}}
{{#isNullable}}
        if (pojo.{{name}} != null) {
            builder.{{setter}}({{nullableType}}.of(pojo.{{name}}));
        }
{{/isNullable}}
{{^isNullable}}
        builder.{{setter}}(pojo.{{name}});
{{/isNullable}}
{{/fields}}
        return builder.build();
    }

    static public {{className}} fromProto({{protoFullName}} proto) {
        {{className}} pojo = new {{className}}();
{{#fields}}
{{#isNullable}}
        if (proto.{{hasFunction}}()) {
            pojo.{{setter}}(proto.{{getter}}().getValue());
        }
{{/isNullable}}
{{^isNullable}}
        pojo.{{setter}}(proto.{{getter}}());
{{/isNullable}}
{{/fields}}
        return pojo;
    }
}