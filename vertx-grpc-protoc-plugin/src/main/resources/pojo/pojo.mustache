{{#packageName}}
package {{packageName}};
{{/packageName}}

import com.google.protobuf.*;
import lombok.Data;
import lombok.experimental.Accessors;

@Data
@Accessors(chain = true)
public class {{className}} {
{{#fields}}
    private {{javaType}} {{camelCaseName}};
{{/fields}}

    static public {{protoObject}} toProto({{className}} pojo) {
        {{protoObject}}.Builder builder = {{protoObject}}.newBuilder();
{{#fields}}
{{#isNullable}}
        if (pojo.{{camelCaseName}} != null) {
            builder.set{{pascalCaseName}}({{nullableJavaType}}.of(pojo.{{camelCaseName}}));
        }
{{/isNullable}}
{{^isNullable}}
        builder.set{{pascalCaseName}}(pojo.{{camelCaseName}});
{{/isNullable}}
{{/fields}}
        return builder.build();
    }

    static public {{className}} fromProto({{protoObject}} proto) {
        {{className}} pojo = new {{className}}();
{{#fields}}
{{#isNullable}}
        if (proto.has{{pascalCaseName}}()) {
            pojo.set{{pascalCaseName}}(proto.get{{pascalCaseName}}().getValue());
        }
{{/isNullable}}
{{^isNullable}}
        pojo.set{{pascalCaseName}}(proto.get{{pascalCaseName}}());
{{/isNullable}}
{{/fields}}
        return pojo;
    }
}